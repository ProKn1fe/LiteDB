[MemoryDiagnoser]
public class DictionaryEnumerateBench
{
    [Params(1, 10, 100, 1000)]
    public int Count { get; set; }
    public Dictionary<string, string> Dictionary { get; set; }

    public DictionaryEnumerateBench()
    {
        Dictionary = new Dictionary<string, string>();
        for (var a = 0; a < Count; ++a)
            Dictionary.Add(Random.Shared.Next().ToString(), Random.Shared.Next().ToString());
    }

    [Benchmark]
    public void DictionaryEnumerator()
    {
        foreach (var item in Dictionary)
        {
            Debug.WriteLine(item.Key);
        }
    }

    [Benchmark]
    public void DictionaryKeys()
    {
        foreach (var key in Dictionary.Keys)
        {
            Debug.WriteLine(Dictionary[key]);
        }
    }
}

Dictionary enumerator vs keys.

|               Method | Count |     Mean |     Error |    StdDev | Allocated |
|--------------------- |------ |---------:|----------:|----------:|----------:|
| DictionaryEnumerator |     1 | 9.248 ns | 0.0074 ns | 0.0066 ns |         - |
|       DictionaryKeys |     1 | 2.036 ns | 0.0483 ns | 0.0452 ns |         - |
| DictionaryEnumerator |    10 | 8.423 ns | 0.0118 ns | 0.0110 ns |         - |
|       DictionaryKeys |    10 | 2.019 ns | 0.0150 ns | 0.0126 ns |         - |
| DictionaryEnumerator |   100 | 8.430 ns | 0.0106 ns | 0.0099 ns |         - |
|       DictionaryKeys |   100 | 2.017 ns | 0.0575 ns | 0.0538 ns |         - |
| DictionaryEnumerator |  1000 | 8.255 ns | 0.0271 ns | 0.0240 ns |         - |
|       DictionaryKeys |  1000 | 1.990 ns | 0.0125 ns | 0.0117 ns |         - |

